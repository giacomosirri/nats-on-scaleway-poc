name: Create and publish Docker images

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to apply to the Docker images'
        required: true
        default: ''
        type: string
  push:
    tags:
      - 'v*'
    
env:
  REGISTRY: ghcr.io

jobs:
  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image:
          - name: data-consumer
            dockerfile: app/src/subscribers/Dockerfile-subscriber
          - name: data-aggregator
            dockerfile: app/src/subscribers/Dockerfile-aggregator

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image tag and label
        if: github.event_name == 'push'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: app/src/subscribers
          push: true
          file: ${{ matrix.image.dockerfile }}
          tags: ${{ steps.meta.outputs.tags || inputs.tag }} 
          labels: ${{ steps.meta.outputs.labels || '' }}

      - name: Update the Deployment definition in place
        run: |
          IMAGE_NAME=`echo "${{ steps.meta.outputs.tags }}" | head -n 1`
          echo $IMAGE_NAME
          sed -i "s,image: .*,image: ${IMAGE_NAME}," ${{ matrix.image.name }}-deployment.yaml
          cat ${{ matrix.image.name }}-deployment.yaml
        working-directory: k8s

      - name: Run kubectl apply to update the Deployment
        uses: actions-hub/kubectl@v1.33.3
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: apply -f k8s/${{ matrix.image.name }}-deployment.yaml
