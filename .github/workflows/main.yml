name: Plan or deploy resources

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose an action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - plan + apply

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.0"

      - name: Set environment variables
        run: |
          echo "SCW_ACCESS_KEY=${{ secrets.SCW_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "SCW_SECRET_KEY=${{ secrets.SCW_SECRET_KEY }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.SCW_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.SCW_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Initialize Terraform
        run: terraform init -upgrade
        working-directory: terraform

      - name: Run terraform plan
        run: terraform plan -var app_name=project-scw-target -out release.tfplan
        working-directory: terraform

      - name: Post build summary
        uses: borchero/terraform-plan-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          planfile: release.tfplan
          working-directory: terraform
      
      - name: Run terraform apply
        if: ${{ github.event.inputs.action == 'plan + apply' }}
        run: terraform apply -auto-approve release.tfplan
        working-directory: terraform

      - name: Download Kubeconfig file
        id: kubeconfig
        if: ${{ github.event.inputs.action == 'plan + apply' }}
        run: |
          cluster_id=$(terraform output -raw kubernetes_cluster_id)
          echo "kubeconfig_string=`curl -X GET -H "Content-Type: application/json" -H "X-Auth-Token: ${{ secrets.SCW_SECRET_KEY }}" https://api.scaleway.com/k8s/v1/regions/fr-par/clusters/${cluster_id}/kubeconfig | jq -r .content`" >> $GITHUB_OUTPUT
        working-directory: terraform

      - name: Save the Kubeconfig file content as a repository Secret
        uses: gliech/create-github-secret-action@v1
        with:
          name: KUBECONFIG
          value: ${{ steps.kubeconfig.outputs.kubeconfig_string }}
          pa_token: ${{ secrets.PAT_TOKEN }}
      
      - name: Create Image Pull Secret
        uses: actions-hub/kubectl@v1.33.3
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: create secret docker-registry ghcr-login-secret --docker-server=ghcr.io --docker-username=${{ github.actor }} --docker-password=${{ secrets.PAT_TOKEN }} --docker-email=${{ github.actor }}@users.noreply.github.com